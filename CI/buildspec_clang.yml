version: 0.2

env:
  shell: bash
  parameter-store:
    GIT_USER: "/CodeBuild/Git_USER"
    GIT_PASS: "/CodeBuild/Git_PASS"

phases:
  install:
    commands:
      - echo Executing install phase
      - echo $CODEBUILD_WEBHOOK_TRIGGER
      - echo $CODEBUILD_WEBHOOK_BASE_REF
      - echo $CODEBUILD_WEBHOOK_ACTOR_ACCOUNT_ID
      - echo $CODEBUILD_WEBHOOK_EVENT
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - pip install xarray
      - echo $PATH
      - echo $LD_LIBRARY_PATH
      - echo $PYTHONPATH
      - export PYTHONPATH=/usr/local/lib:/usr/local/lib/python3.8/site-packages

      # Codebuild only runs on PUSH events if HEAD_REF
      # is refs/heads/develop (merge to develop). In this
      # case CODEBUILD_GIT_BRANCH="develop"  
     
      - if [ "$CODEBUILD_WEBHOOK_EVENT" = "PUSH" ];
        then export CODEBUILD_GIT_BRANCH="develop";
        echo "Merging to develop";
        else export CODEBUILD_GIT_BRANCH=${CODEBUILD_WEBHOOK_HEAD_REF#refs/heads/};
        fi 

      - echo "CODEBUILD_GIT_BRANCH=${CODEBUILD_GIT_BRANCH}"
      - echo "CODEBUILD_SOURCE_VERSION=${CODEBUILD_SOURCE_VERSION}"

      - git lfs install
      - git clone https://$GIT_USER:$GIT_PASS@github.com/jcsda-internal/ioda-converters
      - cd ioda-converters
      - git checkout $CODEBUILD_GIT_BRANCH || echo "No branch named $CODEBUILD_GIT_BRANCH in ioda-converters repo"
      - cd $CODEBUILD_SRC_DIR

  pre_build:
    commands:
      - echo Executing pre_build phase
      - mkdir /build_container
      - mkdir -p /jcsda/ioda-bundle
      - cd CI

      - if [ "$CODEBUILD_GIT_BRANCH" = "develop" ];
        then export CODEBUILD_GIT_BRANCH_FORK="release-stable";
        else export CODEBUILD_GIT_BRANCH_FORK=${CODEBUILD_GIT_BRANCH};
        echo "CODEBUILD_GIT_BRANCH_FORK=${CODEBUILD_GIT_BRANCH_FORK}";
        fi

      # ioda-converters (testing repo)
      - ./clone.sh $GIT_USER $GIT_PASS jcsda-internal/ioda-converters $CODEBUILD_GIT_BRANCH iodaconv /jcsda/ioda-bundle develop

      # jedi-cmake
      - ./clone.sh $GIT_USER $GIT_PASS jcsda-internal/jedi-cmake $CODEBUILD_GIT_BRANCH jedicmake /jcsda/ioda-bundle develop

     # oops
      - ./clone.sh $GIT_USER $GIT_PASS jcsda-internal/oops $CODEBUILD_GIT_BRANCH oops /jcsda/ioda-bundle develop

     # ioda
      - ./clone.sh $GIT_USER $GIT_PASS jcsda-internal/ioda $CODEBUILD_GIT_BRANCH ioda /jcsda/ioda-bundle develop

      # ioda-data
      - ./clone.sh $GIT_USER $GIT_PASS jcsda-internal/ioda-data $CODEBUILD_GIT_BRANCH ioda-data /jcsda/ioda-bundle develop

      - cp CMakeLists.txt /jcsda/ioda-bundle
      - cp -r cmake /jcsda/ioda-bundle/
      - ls /jcsda/ioda-bundle/
  build:
    commands:
      - cd /build_container
      - ecbuild -DBUILD_PYTHON_BINDINGS=ON /jcsda/ioda-bundle
      - cd /build_container/iodaconv
      - make -j4 

      - export BUILD_STATUS="0"
      - echo $BUILD_STATUS
      - echo $CODEBUILD_BUILD_SUCCEEDING

      - if [ "$CODEBUILD_BUILD_SUCCEEDING" = "1" ];
        then export BUILD_STATUS="1";
        echo "Build passed";
        fi
      - echo $BUILD_STATUS
      - ctest

  post_build:
    commands:
      - echo Executing post_build phase
      - echo $CODEBUILD_BUILD_SUCCEEDING
      - if [ "$BUILD_STATUS" = "1" ] && [ "$CODEBUILD_BUILD_SUCCEEDING" = "0" ];
        then echo "Build passed, rerun failed tests";
        ctest -VV --rerun-failed;
        else echo "Build failed";
        fi


